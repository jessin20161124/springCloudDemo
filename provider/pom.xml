<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.jessin.practice.spring.cloud</groupId>
		<artifactId>demo</artifactId>
		<version>${revision}</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<artifactId>provider</artifactId>
	<name>provider</name>
	<description>Demo project for Spring Cloud</description>

	<dependencies>
		<dependency>
			<artifactId>api</artifactId>
			<groupId>com.jessin.practice.spring.cloud</groupId>
		</dependency>
		<!--
    1.0.0版本无法扫描classpath:*Mapper.xml
    1.3.0可以，注入的是String[]，
    但是需要使用@MapperScan或者对单独的接口标注@Mapper
 -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.3.0</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.shardingsphere</groupId>
			<artifactId>sharding-jdbc-spring-boot-starter</artifactId>
		</dependency>

		<!-- 以后使用redisson作为所有分布式锁，分布式对象等功能框架-->
		<dependency>
			<groupId>org.redisson</groupId>
			<artifactId>redisson</artifactId>
		</dependency>

		<!-- 注意版本对应关系：https://blog.csdn.net/Chollian/article/details/116161466 -->
		<dependency>
			<groupId>org.elasticsearch.client</groupId>
			<artifactId>elasticsearch-rest-high-level-client</artifactId>
		</dependency>

		<!-- spring-data提供相关template，例如MongoTemplate/HbaseTemplate -->
		<!-- mongodb和spring-boot对应关系：https://docs.spring.io/spring-data/mongodb/docs/3.2.4/reference/html/#compatibility.matrix -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper-spring-boot-starter</artifactId>
		</dependency>

		<!-- hbase没有相关的自动化配置类，没有spring-boot-starter spring-data-hbase相关包已经很久没有更新 -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-hadoop-hbase</artifactId>
			<version>2.5.0.RELEASE</version>
			<exclusions>
				<!-- 避免和内嵌tomcat带的包冲突 -->
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.servlet.jsp</groupId>
					<artifactId>jsp-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-hadoop</artifactId>
			<version>2.5.0.RELEASE</version>
		</dependency>
		<!-- 上面两个包引进hbase-client时是optional方式，所以需要再引进下，需要和服务端对应 -->
		<!-- 版本对应关系：https://blog.csdn.net/liubenlong007/article/details/95340332 -->
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-client</artifactId>
<!--			<version>0.98.5-hadoop2</version>-->
			<version>1.1.2</version>

			<exclusions>
				<!-- 暂时使用spring-boot引进的logback-->
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
<!--				<configuration>-->
<!--					<excludes>-->
<!--						<exclude>-->
<!--							<groupId>org.projectlombok</groupId>-->
<!--							<artifactId>lombok</artifactId>-->
<!--						</exclude>-->
<!--					</excludes>-->
<!--				</configuration>-->
			</plugin>
			<plugin>
				<!--
				https://deecyn.gitee.io/notes/doc/javaweb/mybatis/mybatis-generator-config.html
				https://juejin.cn/post/6844904116422983694
				-->
				<!--  mvn mybatis-generator:generate -DuserName=xxx -Dpassword=xxx -->
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-maven-plugin</artifactId>
				<version>1.3.7</version>

				<configuration>
					<!--  引入 MyBatis-Generator 的配置文件 -->
					<configurationFile>./src/main/resources/generatorConfig.xml</configurationFile>
					<!--  允许 MBG 将构建消息写入日志中  -->
					<verbose>true</verbose>
					<!--  再次运行 MBG 时，允许覆盖已生成的文件，但是不会覆盖 xml 文件  -->
					<overwrite>true</overwrite>
				</configuration>

				<dependencies>
					<!--  引入 mysql 的 JDBC 驱动，否则会报错找不到驱动  -->
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>8.0.17</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>
</project>
